# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Swift
permissions:
  id-token: write
  contents: read
  checks: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-13, ubuntu-latest]

    steps:
    - uses: swift-actions/setup-swift@v1
    - uses: actions/checkout@v3
    - name: Get swift version
      run: swift --version # Swift 5.9
    - name: Get macOS version
      run: sw_vers
      if: startsWith( matrix.os, 'macos' )
    - name: Set TEST_GITHUB_TOKEN env variable
      shell: bash
      env:
        TEST_GITHUB_TOKEN: ${{ secrets.TEST_GITHUB_TOKEN }}
      run: |
        echo "$TEST_GITHUB_TOKEN" > $HOME/.env
    - name: Build
      run: swift build
    - name: Run tests
      run: swift test --parallel --xunit-output=results.xml
    - name: Report test results
      uses: phoenix-actions/test-reporting@v8
      id: test-report
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Swift tests on ${{ matrix.os }}
        path: results.xml
        reporter: java-junit